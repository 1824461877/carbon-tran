// Code generated by goctl. DO NOT EDIT.
package types

import (
	"github.com/dgrijalva/jwt-go"
	pb2 "pay/pb"
	"trade/pb"
)

type Ping struct {
	Message string `json:"message"`
}

type ExchangeAssetTransactionReq struct {
	ExId   			  	string 			   	`json:"ex_id"`
	Number 				int64             	`json:"number"`
}

type ExchangeAssetTransactionResp struct {
	Code    int     `json:"code"`
	OrderId string  `json:"order_id"`
	Messing string  `json:"messing"`
}

type GetAssetTradeInfoResp struct {
	Code    int     	   `json:"code"`
	Assets *GetAssetTradeInfoOnce `json:"assets"`
}

type GetAssetTradeInfoOnce struct {
	ExId   		string  `json:"ex_id"`
	AID    		string  `json:"aid"`
	UserId      string  `json:"user_id"`
	Project     string  `json:"project"`
	Amount 		float64 `json:"amount"`
}

type PayOrderResp struct {
	Code    int    `json:"code"`
	Messing string  `json:"messing"`
}

type PayOrderStatusResp struct {
	Code    int    `json:"code"`
	PayOrderStatusResp *pb2.PayOrderStatusResp `json:"pay_order_status_resp"`
}

type ExchangeAssetDetailsReq struct {
	AssId string             `json:"assId"`
}

type RetireFile struct {
	RID   string `path:"rid"`
}

type ExchangeAssetDetailsResp struct {
}

type ExchangeAssetOnceResp struct {
	ExId 			string `json:"ex_id"`
	UserId      	string `json:"user_id"`
	GS          	string `json:"gs"`
	Serial          string `json:"serial"`
	Number      	int64  `json:"number"`
	Project     	string `json:"project"`
	SerialNumber 	string `json:"serial_number"`
	Source 			string `json:"source"`
	Amount          float64 `json:"amount"`
	Day 			int64  `json:"day"`
	Country 		string `json:"country"`
	Product 		string `json:"product"`
	ProjectType 	string `json:"project_type"`
	Assid       	string `json:"ass_id"`
	CreateTime 		int64  `json:"current_time"`
	EndTime 		int64  `json:"end_time"`
}

type ExchangeAssetListReq struct {
	ExId   string `form:"ex_id,optional"`
}

type ExchangeAssetListResp struct {
	ExchangeAssetList []ExchangeAssetOnceResp `json:"exchange_asset_list"`
}

type PersonalAssetRetireReq struct {
	AssId       string  `json:"ass_id"`
	Number      int64   `json:"number"`
}

type PayOrderReq struct {
	PayOrderId       string  `json:"pay_order_id"`
}


type GetObtainTransactionReq struct {
	State  string `form:"state,optional"`
}

type ObtainTransactionResp struct {
	Code       	  int    	          `json:"code"`
	TradeOnceResp []*pb.TradeOnceResp `json:"trade_once_resp"`
}

type PersonalAssetOnceResp struct {
	Code        	int    	`json:"code"`
	UserID          string  `json:"user_id"`
	AssId       	string 	`json:"ass_id"`
	GS          	string  `json:"gs"`
	Serial          string  `json:"serial"`
	Project     	string  `json:"project"`
	HID             string  `json:"hid"`
	SerialNumber 	string  `json:"serial_number"`
	Source 			string  `json:"source"`
	Country 		string  `json:"country"`
	Product 		string  `json:"product"`
	ProjectType 	string  `json:"project_type"`
	Affiliation 	int64   `json:"affiliation"`
	Number      	int64   `json:"number"`
	RetireNumber    int64   `json:"retire_number"`
	Day         	int64   `json:"day"`
	Listing         bool    `json:"listing"`
}

type PersonalAssetListResp struct {
	PersonalAssetList []PersonalAssetOnceResp `json:"personal_asset_list"`
}

type GetPersonalAssetRetireResp struct {
	RetireList []RetireOnce `json:"retire_list"`
}

type RetireOnce struct {
	RId        string    `json:"r_id"`
	AssId      string    `json:"ass_id"`
	Number     int64     `json:"number"`
	Status     int64     `json:"status"`
	CertificateLink string `json:"certificate_link"`
	CreateTime int64 	 `json:"create_time"`
}

type PersonalAssetRetireResp struct {
	Code        int    `json:"code"`
	Message     string `json:"message"`
}

type GetPersonalAssetSellReq struct {
	ExId   string `form:"ex_id,optional"`
}

type GetAssetSellReq struct {
	ExID   string `form:"ex_id,optional"`
}

type PersonalAssetSellReq struct {
	AssId  			   string   `json:"ass_id,optional"`
	CollectionWalletId string   `json:"collection_wallet_id"`
	Number 			   int64    `json:"number,optional"`
	Amount 			   float64  `json:"amount,optional"`
	Status 			   int64    `json:"status"`
	KeepTime 		   int64    `json:"keep_time,optional"`
}

type GetPersonalAssetSellResp struct {
	ExId 		string `json:"ex_id"`
	UserId      string `json:"user_id"`
	Number      int64  `json:"number"`
	Assid       string `json:"ass_id"`
	CreateTime  int64  `json:"current_time"`
	EndTime     int64  `json:"end_time"`
}

type PersonalAssetSellResp struct {
	Code        int    `json:"code"`
	Message     string `json:"message"`
}


type UserWalletCreateReq struct {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type UserWalletAddReq struct {
	Name     string `json:"name"`
	CID 	 string `json:"c_id"`
	CType    string `json:"c_type"`
}

type UserWalletCreateResp struct {
	Code int `json:"code"`
	Message string `json:"message"`
	Time    string `json:"time"`
}

type UserWalletReq struct {
}

type UserWalletInfoResp struct {
	UserId string `json:"user_id"`
	CreateTime string `json:"create_time"`
	Name 	 string `json:"name"`
	DefaultCollection bool `json:"default_collection"`
	WalletId string `json:"wallet_id"`
	WalletType int64 `json:"wallet_type"`
}

type UserWalletLoginReq struct {
	WalletId string `json:"wallet_id"`
	Password string `json:"password"`
}

type UserWalletLoginResp struct {
	Token     string `json:"token"`
	LoginTime string `json:"login_time"`
}

type UserWalletListResp struct {
	WalletIdList   []WalletOnce `json:"wallet_id_list"`
}


type TradeOrder struct {
	Uid             string  `json:"uid"`
	PayAmount       float64 `json:"pay_amount"`
	Number          int64   `json:"number"`
	CollectionID    string  `json:"collection_id"`
	ExchangeAssetID string  `json:"exchange_asset_id"`
	Initiator       string  `json:"initiator"` // 交易的发起者
	Recipient       string  `json:"recipient"` // 交易接受者
	jwt.StandardClaims
}


type PayOrder struct {
	Initiator         string `json:"initiator"` // 支付的发起者
	Recipient         string `json:"recipient"` // 支付接受者
	InitiatorWalletId string `json:"initiator_wallet_id"`
	RecipientWalletId string `json:"recipient_wallet_id"`
	PayAmount         float64 `json:"pay_amount"` // 支付金额
	jwt.StandardClaims
}


type WalletOnce struct{
	Name 	 string `json:"name"`
	DefaultCollection bool `json:"default_collection"`
	WalletId string `json:"wallet_id"`
	WalletType int64 `json:"wallet_type"`
}